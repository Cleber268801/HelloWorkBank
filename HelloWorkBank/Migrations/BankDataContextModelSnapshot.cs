// <auto-generated />
using System;
using HelloWorkBank.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HelloWorkBank.Migrations
{
    [DbContext(typeof(BankDataContext))]
    partial class BankDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("HelloWorkBank.Model.ContaModel", b =>
                {
                    b.Property<int>("IdConta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeConta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVarchar")
                        .HasColumnName("NomeConta");

                    b.HasKey("IdConta");

                    b.HasIndex("IdConta")
                        .IsUnique();

                    b.ToTable("Conta", (string)null);
                });

            modelBuilder.Entity("HelloWorkBank.Models.ClienteModel", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVarchar")
                        .HasColumnName("CPF");

                    b.Property<int>("ContaIdConta")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasMaxLength(60)
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("DataCriacao");

                    b.Property<int>("GerenteIdGerente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdConta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdGerente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVarchar")
                        .HasColumnName("Name");

                    b.Property<int>("NumeroConta")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("Int")
                        .HasColumnName("NumeroConta");

                    b.HasKey("IdCliente");

                    b.HasIndex("ContaIdConta");

                    b.HasIndex("GerenteIdGerente");

                    b.HasIndex("NumeroConta")
                        .IsUnique();

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("HelloWorkBank.Models.GerenteModel", b =>
                {
                    b.Property<int>("IdGerente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeGerente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVarchar")
                        .HasColumnName("NomeGerente");

                    b.HasKey("IdGerente");

                    b.HasIndex("NomeGerente")
                        .IsUnique();

                    b.ToTable("Gerente", (string)null);
                });

            modelBuilder.Entity("HelloWorkBank.Models.ClienteModel", b =>
                {
                    b.HasOne("HelloWorkBank.Model.ContaModel", "Conta")
                        .WithMany("CLientes")
                        .HasForeignKey("ContaIdConta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CLiente_Conta");

                    b.HasOne("HelloWorkBank.Models.GerenteModel", "Gerente")
                        .WithMany("Clientes")
                        .HasForeignKey("GerenteIdGerente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CLiente_Gerente");

                    b.Navigation("Conta");

                    b.Navigation("Gerente");
                });

            modelBuilder.Entity("HelloWorkBank.Model.ContaModel", b =>
                {
                    b.Navigation("CLientes");
                });

            modelBuilder.Entity("HelloWorkBank.Models.GerenteModel", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
